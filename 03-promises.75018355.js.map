{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","delay","step","amount","submitBtn","onSubmitBtn","event","preventDefault","firstDeleyValue","value","stepDeleyValue","amountValue","position","setTimeout","createPromise","Math","random","console","log","addEventListener"],"mappings":";AAOA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BAKpC,SAASK,EAAYC,GACnBA,EAAMC,iBACFC,IAAAA,EAAkBX,EAAKI,MAAMQ,MAC7BC,EAAiBb,EAAKK,KAAKO,MAC3BE,EAAcd,EAAKM,OAAOM,MAC1BR,EAAQ,EAEP,IAAA,IAAIW,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DX,EAAQO,EACJI,EAAW,IACbX,EAAQS,GAGVG,WAAWC,EAAcF,EAAUX,GAAQA,GAI/C,SAASa,EAAcF,EAAUX,GACTc,KAAKC,SAAW,GAGpCC,QAAQC,IAAI,WAEZD,QAAQC,IAAI,UAzBhBrB,EAAKC,KAAKqB,iBAAiB,SAAUd","file":"03-promises.75018355.js","sourceRoot":"../src","sourcesContent":["/**\n * Напиши скрипт, который при сабмите формы вызывает функцию \n * createPromise(position, delay) столько раз, сколько ввели в поле amount. \n * При каждом вызове передай ей номер создаваемого промиса (position) \n * и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step).\n*/\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(event) {\n  event.preventDefault();\n  let firstDeleyValue = refs.delay.value;\n  let stepDeleyValue = refs.step.value;\n  let amountValue = refs.amount.value;\n  let delay = 0;\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    delay = firstDeleyValue;\n    if (position > 1) {\n      delay = stepDeleyValue;          \n    }\n    \n    setTimeout(createPromise(position, delay), delay) ;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  // console.log(shouldResolve);\n  if (shouldResolve) {\n    console.log('aaaaaaa');// Fulfill\n  } else {\n    console.log('beeeee');// Reject\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"]}